#include <iostream>
#include <string.h>
#include <cmath>

using namespace std;

class Car{
    int count_wheel;
    double mileage;
    double tank_volume;
    double speed;
    double engine_power;
    double engine_consumption;
    double travel_time;
    int main_flag=0;
    string name;
public:
    Car();
    Car(int i,Car* number_car);
    ~Car();
    double get_speed();
    int calculate_count_gas_stations(double length_route);
    void output();
    double calculate_travel_time(double length_route);
    double calculate_engine_consumption();
    double get_travel_time();
    string get_name();
    int count_gas_stations;
    int get_main_flag();
};
Car::Car(){
    cout <<"Запись об ТС "<< name <<" создана!"<<endl;
    };
Car::~Car(){
        cout <<"Запись об ТС "<< name <<" удадена!"<<endl;
    };
void comparison(double* travel_time_arr,double* count_gas_stations, string* arr_name,int size_arr);
void clean();
void ignoreLine();
int Car::get_main_flag(){
    return main_flag;
}

void Car::output(){
    cout<<"Информация о ТС "<<name<<endl;
    cout<< "Количество колес: "<<count_wheel<<endl;
    cout<< "Мощность двигателя(ЛС): "<<engine_power<<endl;
    get_speed();
    cout<< "Скорость(км/ч): "<<speed<<endl;
    calculate_engine_consumption();
    cout<< "Потребление топлива(л/100км): "<<engine_consumption<<endl;
};

void check_input(double &param);
void check_input(int &param);

Car::Car(int i,Car* number_car){
    cout<< "Введите название ТС:"<<endl;
    cin>>number_car[i].name;
    cout<< "Введите количество колес ТС "<<name<<endl;
    check_input(number_car[i].count_wheel);
    cout<< "Введите объем бака ТС (л) "<<name<<endl;
    check_input(number_car[i].tank_volume);
    cout<< "Введите мощность двигателя ТС (ЛС) "<<name<<endl;
    check_input(number_car[i].engine_power);

    number_car[i].main_flag=1;
}

double Car::calculate_travel_time(double length_route){
    get_speed();
    travel_time=length_route/speed;
    return travel_time;
 }
double Car::get_travel_time(){
    return travel_time;
}
string Car::get_name(){
    return name;
}
int Car::calculate_count_gas_stations(double length_route){
    calculate_engine_consumption();
    count_gas_stations=ceil(length_route/(tank_volume/engine_consumption));
    return count_gas_stations;
}
double Car::get_speed(){
    if(main_flag!=1){
        count_wheel=1;
    }
    speed=sqrt(engine_power)*fabs(70/count_wheel-2.5);
    return speed;
}
double Car::calculate_engine_consumption(){
      engine_consumption=pow(engine_power,1/3)+fabs(sqrt(engine_power)-6.25);
      return engine_consumption;
}


int main()
{
    setlocale(LC_CTYPE,"");

    int size_arr=10,num=0;
    double length_route=.0;
    int i=0;
    int flag_track=0;
    int flag_time_track=0;

    double* travel_time_arr =new double[size_arr];
    double* count_gas_stations =new double[size_arr];
    string* arr_name=new string[size_arr];

    int check=0;
    do{
        cout << "Ввелите количество транспортных средств!" << endl;
        cin >> size_arr;

        while (cin.fail()) {
            ignoreLine();
            cout << "Пожалуйста введите число а не символ!" << endl;
            cin >> size_arr;
        }
        if(size_arr > 0){
           check=1;
        }
        else{
            cout<<"Ошибка ввода!"<<endl;
        }
    }while(check!=1);
    clean();


    Car* number_car=new Car[size_arr];

    cout<<"Для продолжения нажмите любую клавишу!"<<endl;
                cin.get();
                cin.get();
    clean();
    do{
        cout<<"1-Ввод данных о новом ТС"<<endl;
        cout<<"2-Вывод данных ТС"<<endl;
        cout<<"3-Ввод протяженности трассы"<<endl;
        cout<<"4-Расчет прохождения трассы"<<endl;
        if(flag_time_track==1){
            cout<<"5-Результаты прохождения трассы"<<endl;
        }
        cout<<"0-Закончить работу"<<endl;
        cout << "Введите действие: ";

        cin >> num;
            while (cin.fail()) {
                ignoreLine();
                cout << "Пожалуйста введите число а не символ!" << endl;
                cin >> num;
            }

        clean();
        if(num==1){
            cout << "Введите номер транспорта!" << endl;
            cin >> i;
            while (cin.fail()) {
                ignoreLine();
                cout << "Пожалуйста введите число а не символ!" << endl;
                cin >> i;
            }

            if(i<=size_arr&&i>0){
                i--;
                Car(i,number_car);
                clean();
            }else{
                cout<<"Такого ТС не существует!"<<endl;
                cout<<"Для возврашения в главное миню нажмите любую клавишу!"<<endl;
                cin.get();
                cin.get();
            }
            clean();

        }
        else if(num==2){
            cout << "Введите номер транспорта!" << endl;
            cin >> i;
            while (cin.fail()) {
                ignoreLine();
                cout << "Пожалуйста введите число, а не символ!" << endl;
                cin >> i;
            }
            if(i<=size_arr&&i>0){
                clean();
                i--;
                number_car[i].output();
            }else{
                cout<<"Такого ТС не существует!"<<endl;
            }

            cout<<"Для возврашения в главное меню нажмите любую клавишу!"<<endl;
            cin.get();
            cin.get();
            clean();
        }else if(num==3){
            clean();
            cout<<"Введите протяженность трассы (км)!"<<endl;
            cin>>length_route;
            while (cin.fail()) {
                ignoreLine();
                cout << "Пожалуйста введите число, а не символ!" << endl;
                cin >> length_route;
            }
            if(length_route>0){
                flag_track=1;
                cout<<"Данные успешно введены!"<<endl;
            }else{
                cout<<"Длина дороги не может быть отрицательной!"<<endl;
            }
            cout<<"Для возврашения в главное меню нажмите любую клавишу!"<<endl;

            cin.get();
            cin.get();
            clean();

        }else if(num==4){
            int check=0;
            for(int i=0;i<size_arr;i++){
                check=check+number_car[i].get_main_flag();
            }
            if(check==size_arr){
                if(flag_track==1){
                    //cout<<"length_route "<<length_route<<endl;
                    for(int i=0;i<size_arr;i++){
                           travel_time_arr[i]=number_car[i].calculate_travel_time(length_route);
                           count_gas_stations[i]=number_car[i].calculate_count_gas_stations(length_route);
                            arr_name[i]=number_car[i].get_name();
                    }

                    cout<<"Расчет прохождения трассы проведен!"<<endl;
                    flag_time_track=1;
                }else{
                    cout<<"Для использования функции введите длину трассы!"<<endl;
                }
            }else{
                cout<<"Введены данные не о всех ТС!"<<endl;
            }
            cout<<"Для возврашения в главное меню нажмите любую клавишу!"<<endl;
                    cin.get();
                    cin.get();
                    clean();
        }else if(num==5){
            comparison(travel_time_arr,count_gas_stations,arr_name,size_arr);
            for(int i=0;i<size_arr;i++){
                cout<<"Время прохождения трассы автомобилем "<< arr_name[i] << ": "<<  travel_time_arr[i]<<endl;
                cout<<"Количество запарвок: "<<count_gas_stations[i]<<endl;
            }
            cout<<"Для возврашения в главное меню нажмите любую клавишу!"<<endl;
            cin.get();
            cin.get();
            clean();
        }
        if(num==0){
            cout<<"Точно хотите завершить работу?"<<endl;
            cout<<"1-ДА"<<endl;
            cout<<"0-НЕТ"<<endl;
            cin>>num;
            while (cin.fail()) {
                ignoreLine();
                cout << "Пожалуйста введите число, а не символ!" << endl;
                cin >> num;
            }
            num--;
            clean();
        }
    }while(num!=0);
    cout << "Работа завершена!"<<endl;

    delete[] number_car;

    return 0;
}

void ignoreLine()
{
    cin.clear();
    cin.ignore();
}
void clean(){
    int i=0;
    while(i<100){
        cout<<endl;
        i++;
    }
}
void in_comp(double* travel_time_arr,double* count_gas_stations, string* arr_name,int i,int j){
    double temp=travel_time_arr[j];
    travel_time_arr[j]=travel_time_arr[j+1];
    travel_time_arr[j+1]=temp;
    int temp_refuelings=count_gas_stations[j];
    count_gas_stations[j]=count_gas_stations[j+1];
    count_gas_stations[j+1]=temp_refuelings;
    string temp_name;
    temp_name=arr_name[j];
    arr_name[j]=arr_name[j+1];
    arr_name[j+1]=temp_name;
};
void comparison(double* travel_time_arr,double* count_gas_stations, string* arr_name,int size_arr){

            for(int i=0;i<size_arr;i++)
            {
              for(int j=0;j<size_arr-1;++j)
              {
                  if(travel_time_arr[j]>travel_time_arr[j+1])
                {
                    in_comp(travel_time_arr,count_gas_stations,arr_name,i,j);
                }
                if(travel_time_arr[j]==travel_time_arr[j+1])
                {
                  if(count_gas_stations[j]>count_gas_stations[j+1])
                  {
                    in_comp(travel_time_arr,count_gas_stations,arr_name,i,j);
                  }
                }
              }
            }
}
void check_input(double &param){
    int flag=0;
    do{
        cin>>param;
        if(param>0){
            flag=1;
        }else{
            cout<<"Повторите ввод,данные невозможны!!!"<<endl;
        }
    }while(flag!=1);
    flag=0;
}
void check_input(int &param){
    int flag=0;
    do{
        cin>>param;
        if(param>1){
            flag=1;
        }else{
            cout<<"Повторите ввод,данные невозможны!!!"<<endl;
        }
    }while(flag!=1);
    flag=0;
}
